<?xml version="1.0" encoding="ASCII"?>
<b:Implementation xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:b="http://www.clearsy.com/B" name="Doors_i">
  <sees>
    <seens href="models/Inputs.xmi#/"/>
    <seens href="models/Utils.xmi#/"/>
  </sees>
  <definitions>
    <exprs name="DOOR_SENSOR_CONSISTENT">
      <args name="visible"/>
      <args name="opening"/>
      <args name="closed"/>
      <args name="closing"/>
      <expr xsi:type="b:AndExpr">
        <exprs xsi:type="b:ImplyExpr">
          <left xsi:type="b:EqualExpr">
            <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.0"/>
            <right xsi:type="b:ConstantExpr" constant="FALSE"/>
          </left>
          <right xsi:type="b:AndExpr">
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.1"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.2"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.3"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
          </right>
        </exprs>
        <exprs xsi:type="b:ImplyExpr">
          <left xsi:type="b:EqualExpr">
            <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.1"/>
            <right xsi:type="b:ConstantExpr"/>
          </left>
          <right xsi:type="b:AndExpr">
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.2"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.3"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
          </right>
        </exprs>
        <exprs xsi:type="b:ImplyExpr">
          <left xsi:type="b:EqualExpr">
            <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.2"/>
            <right xsi:type="b:ConstantExpr"/>
          </left>
          <right xsi:type="b:AndExpr">
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.1"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.3"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
          </right>
        </exprs>
        <exprs xsi:type="b:ImplyExpr">
          <left xsi:type="b:EqualExpr">
            <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.3"/>
            <right xsi:type="b:ConstantExpr"/>
          </left>
          <right xsi:type="b:AndExpr">
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.1"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@definitions/@exprs.0/@args.2"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </exprs>
          </right>
        </exprs>
      </expr>
    </exprs>
  </definitions>
  <operations>
    <operations name="door_consistency">
      <outputs name="cons"/>
      <args name="visible"/>
      <args name="opening"/>
      <args name="closed"/>
      <args name="closing"/>
      <body xsi:type="b:If">
        <exprs>
          <condition xsi:type="b:CondEq">
            <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.0"/>
            <right xsi:type="b:BoolLiteral" value="FALSE"/>
          </condition>
          <then xsi:type="b:Assign" var="//@operations/@operations.0/@outputs.0">
            <value xsi:type="b:BoolTest">
              <expr xsi:type="b:AndExpr">
                <exprs xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.1"/>
                  <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                </exprs>
                <exprs xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.2"/>
                  <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                </exprs>
                <exprs xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.3"/>
                  <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                </exprs>
              </expr>
            </value>
          </then>
        </exprs>
        <else xsi:type="b:If">
          <exprs>
            <condition xsi:type="b:CondEq">
              <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.1"/>
              <right xsi:type="b:BoolLiteral"/>
            </condition>
            <then xsi:type="b:Assign" var="//@operations/@operations.0/@outputs.0">
              <value xsi:type="b:BoolTest">
                <expr xsi:type="b:AndExpr">
                  <exprs xsi:type="b:EqualExpr">
                    <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.3"/>
                    <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                  </exprs>
                  <exprs xsi:type="b:EqualExpr">
                    <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.2"/>
                    <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                  </exprs>
                </expr>
              </value>
            </then>
          </exprs>
          <else xsi:type="b:If">
            <exprs>
              <condition xsi:type="b:CondEq">
                <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.3"/>
                <right xsi:type="b:BoolLiteral"/>
              </condition>
              <then xsi:type="b:Assign" var="//@operations/@operations.0/@outputs.0">
                <value xsi:type="b:BoolTest">
                  <expr xsi:type="b:AndExpr">
                    <exprs xsi:type="b:EqualExpr">
                      <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.2"/>
                      <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                    </exprs>
                    <exprs xsi:type="b:EqualExpr">
                      <left xsi:type="b:Ref" var="//@operations/@operations.0/@args.1"/>
                      <right xsi:type="b:ConstantExpr" constant="FALSE"/>
                    </exprs>
                  </expr>
                </value>
              </then>
            </exprs>
            <else xsi:type="b:Assign" var="//@operations/@operations.0/@outputs.0">
              <value xsi:type="b:BoolLiteral"/>
            </else>
          </else>
        </else>
      </body>
    </operations>
    <operations name="are_doors_opening">
      <outputs name="opening"/>
      <body xsi:type="b:Var">
        <vars name="M22_cons"/>
        <vars name="M23_cons"/>
        <in>
          <exprs xsi:type="b:Call" rets="//@operations/@operations.1/@body/@vars.0" op="//@operations/@operations.0">
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.2"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.3"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.5"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.4"/>
            </args>
          </exprs>
          <exprs xsi:type="b:Call" rets="//@operations/@operations.1/@body/@vars.1" op="//@operations/@operations.0">
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.6"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.7"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.9"/>
            </args>
            <args xsi:type="b:Ref">
              <var href="models/Inputs.xmi#//@concreteVariables/@variables.8"/>
            </args>
          </exprs>
          <exprs xsi:type="b:If">
            <exprs>
              <condition xsi:type="b:CondAnd">
                <exprs xsi:type="b:CondEq">
                  <left xsi:type="b:Ref" var="//@operations/@operations.1/@body/@vars.0"/>
                  <right xsi:type="b:BoolLiteral"/>
                </exprs>
                <exprs xsi:type="b:CondEq">
                  <left xsi:type="b:Ref" var="//@operations/@operations.1/@body/@vars.1"/>
                  <right xsi:type="b:BoolLiteral"/>
                </exprs>
              </condition>
              <then xsi:type="b:If">
                <exprs>
                  <condition xsi:type="b:CondAnd">
                    <exprs xsi:type="b:CondEq">
                      <left xsi:type="b:Ref">
                        <var href="models/Inputs.xmi#//@concreteVariables/@variables.3"/>
                      </left>
                      <right xsi:type="b:BoolLiteral"/>
                    </exprs>
                    <exprs xsi:type="b:CondEq">
                      <left xsi:type="b:Ref">
                        <var href="models/Inputs.xmi#//@concreteVariables/@variables.7"/>
                      </left>
                      <right xsi:type="b:BoolLiteral"/>
                    </exprs>
                  </condition>
                  <then xsi:type="b:Assign" var="//@operations/@operations.1/@outputs.0">
                    <value xsi:type="b:BoolLiteral"/>
                  </then>
                </exprs>
                <else xsi:type="b:Assign" var="//@operations/@operations.1/@outputs.0">
                  <value xsi:type="b:BoolLiteral" constant="FALSE"/>
                </else>
              </then>
            </exprs>
            <else xsi:type="b:Assign" var="//@operations/@operations.1/@outputs.0">
              <value xsi:type="b:BoolLiteral" constant="FALSE"/>
            </else>
          </exprs>
        </in>
      </body>
    </operations>
  </operations>
  <refine href="models/Doors.xmi#/"/>
  <localOperations>
    <operations name="door_consistency">
      <outputs name="cons"/>
      <args name="visible"/>
      <args name="opening"/>
      <args name="closed"/>
      <args name="closing"/>
      <body xsi:type="b:Pre">
        <exprs var="//@operations/@operations.0/@args.0">
          <type xsi:type="b:PrimitiveType"/>
        </exprs>
        <exprs var="//@operations/@operations.0/@args.1">
          <type xsi:type="b:PrimitiveType"/>
        </exprs>
        <exprs var="//@operations/@operations.0/@args.2">
          <type xsi:type="b:PrimitiveType"/>
        </exprs>
        <exprs var="//@operations/@operations.0/@args.3">
          <type xsi:type="b:PrimitiveType"/>
        </exprs>
        <expr xsi:type="b:ReturnTuple" vars="//@localOperations/@operations.0/@outputs.0">
          <value xsi:type="b:AndExpr">
            <exprs xsi:type="b:TypeConstraint" var="//@localOperations/@operations.0/@outputs.0">
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@localOperations/@operations.0/@outputs.0"/>
              <right xsi:type="b:BoolTest">
                <expr xsi:type="b:DefinitionCall" def="//@definitions/@exprs.0">
                  <args xsi:type="b:Ref" var="//@localOperations/@operations.0/@args.0"/>
                  <args xsi:type="b:Ref" var="//@localOperations/@operations.0/@args.1"/>
                  <args xsi:type="b:Ref" var="//@localOperations/@operations.0/@args.2"/>
                  <args xsi:type="b:Ref" var="//@localOperations/@operations.0/@args.3"/>
                </expr>
              </right>
            </exprs>
          </value>
        </expr>
      </body>
    </operations>
  </localOperations>
</b:Implementation>
