<?xml version="1.0" encoding="ASCII"?>
<b:Implementation xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:b="http://www.clearsy.com/B" name="Main_i">
  <operations>
    <operations name="do_cycle">
      <body xsi:type="b:Begin">
        <expr xsi:type="b:Seq">
          <exprs xsi:type="b:Call">
            <op href="Inputs.xmi#//@operations/@operations.0"/>
          </exprs>
          <exprs xsi:type="b:Var">
            <vars name="aopp"/>
            <vars name="fb"/>
            <in>
              <exprs xsi:type="b:Call" rets="//@operations/@operations.0/@body/@expr/@exprs.1/@vars.0 //@operations/@operations.0/@body/@expr/@exprs.1/@vars.1">
                <op href="Treatment.xmi#//@operations/@operations.0"/>
              </exprs>
              <exprs xsi:type="b:Call">
                <op href="Outputs.xmi#//@operations/@operations.0"/>
                <args xsi:type="b:Ref" var="//@operations/@operations.0/@body/@expr/@exprs.1/@vars.0"/>
              </exprs>
              <exprs xsi:type="b:Case" var="//@operations/@operations.0/@body/@expr/@exprs.1/@vars.1">
                <cases>
                  <test href="Treatment.xmi#//@sets/@exprs.0/@elems.2"/>
                  <expr xsi:type="b:If">
                    <exprs>
                      <condition xsi:type="b:CondEq">
                        <left xsi:type="b:Ref" var="//@operations/@operations.0/@body/@expr/@exprs.1/@vars.0"/>
                        <right xsi:type="b:BoolLiteral"/>
                      </condition>
                      <then xsi:type="b:Call">
                        <op href="Utils.xmi#//@operations/@operations.0"/>
                        <args xsi:type="b:StringLiteral" value="M11"/>
                        <args xsi:type="b:StringLiteral" value="aopp"/>
                        <args xsi:type="b:StringLiteral" value="2"/>
                      </then>
                    </exprs>
                    <else xsi:type="b:Call">
                      <op href="Utils.xmi#//@operations/@operations.0"/>
                      <args xsi:type="b:StringLiteral" value="M11"/>
                      <args xsi:type="b:StringLiteral" value="aopp"/>
                      <args xsi:type="b:StringLiteral" value="1"/>
                    </else>
                  </expr>
                </cases>
                <cases>
                  <test href="Treatment.xmi#//@sets/@exprs.0/@elems.0"/>
                  <expr xsi:type="b:Call">
                    <op href="Utils.xmi#//@operations/@operations.0"/>
                    <args xsi:type="b:StringLiteral" value="M11"/>
                    <args xsi:type="b:StringLiteral" value="fallback"/>
                    <args xsi:type="b:StringLiteral" value="1"/>
                  </expr>
                </cases>
                <cases>
                  <test href="Treatment.xmi#//@sets/@exprs.0/@elems.1"/>
                  <expr xsi:type="b:Call">
                    <op href="Utils.xmi#//@operations/@operations.0"/>
                    <args xsi:type="b:StringLiteral" value="M11"/>
                    <args xsi:type="b:StringLiteral" value="fallback"/>
                    <args xsi:type="b:StringLiteral" value="2"/>
                  </expr>
                </cases>
              </exprs>
            </in>
          </exprs>
        </expr>
      </body>
    </operations>
  </operations>
  <refine href="Main.xmi#/"/>
  <imports>
    <imports href="Utils.xmi#/"/>
    <imports href="Inputs.xmi#/"/>
    <imports href="Outputs.xmi#/"/>
    <imports href="Treatment.xmi#/"/>
  </imports>
</b:Implementation>
